// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.1'
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id "java"
    id "maven-publish"
    id 'signing'
    id 'io.codearte.nexus-staging' version '0.21.0'
}

repositories {
    mavenCentral()
}

//apply from: 'gradle/publish.gradle'

group = 'com.mangopay'
version = '1.0.4'

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                groupId 'com.mangopay'
                artifactId 'mangopay2-java-sdk'
                version '2.17.0'

                from(components.java)
                artifact sourcesJar
                artifact javadocJar

                name 'cardregistration-android-kit'
                description 'Mangopay Card Registration Kit for Android'
                url 'https://github.com/Mangopay/cardregistration-android-kit'
                organization {
                    name = 'Codegile'
                    url = 'https://www.codegile.com'
                }
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                        distribution = 'repo'
                    }
                }
                scm {
                    url 'git@github.com:mangopay/cardregistration-android-kit.git'
                    connection 'scm:git:git@github.com:mangopay/cardregistration-android-kit.git'
                    developerConnection 'scm:git:git@github.com:mangopay/cardregistration-android-kit.git'
                }

                developers {
                    developer {
                        id = 'cata.craciun'
                        name = 'Catalin Craciun'
                        email = 'catalin.craciun@codegile.com'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = 'cardregistration-android-kit'
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            credentials {
                username = System.getenv("MAVEN_USERNAME") ?: ""
                password = System.getenv("MAVEN_PASSWORD") ?: ""
            }
        }
    }
}

if (project.hasProperty('signing.keyId')) {
    apply plugin: 'signing'
    signing {
        sign publishing.publications.mavenJava
    }
}

tasks.withType(Javadoc) {
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

allprojects {
    repositories {
        google()
        jcenter()
    }

    afterEvaluate { project ->
        def propsFile = rootProject.file('keystore.properties')
        def configName = 'release'

        if (propsFile.exists() && android.signingConfigs.hasProperty(configName)) {
            def props = new Properties()
            props.load(new FileInputStream(propsFile))
            android.signingConfigs[configName].storeFile = file(props['storeFile'])
            android.signingConfigs[configName].storePassword = props['storePassword']
            android.signingConfigs[configName].keyAlias = props['keyAlias']
            android.signingConfigs[configName].keyPassword = props['keyPassword']
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

signing {
    if (project.hasProperty('signing.keyId') && project.hasProperty('signing.password') && project.hasProperty('signing.secretKeyRingFile')) {
        sign configurations.archives

        /* Uncomment this if you use shadow in your build process */
        // sign configurations.shadow
    }
}